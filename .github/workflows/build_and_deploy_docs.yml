name: Build and Deploy Docs

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install --progress-bar off -U .[docs]

      - name: Generate versions.json
        run: |
          python docs/versions.py

      - name: Build docs (dev)
        run: |
          rm -rf site && mkdir -p site
          export DOC_VERSION_MATCH=dev
          make -C docs clean html
          mkdir -p site/dev
          rsync -a docs/_build/html/ site/dev/
          rm -rf docs/_build/

      - name: Build docs (tagged)
        run: |
          LATEST_TAG=$(git tag --sort=v:refname | tail -n1)
          for tag in $(git tag --list 'v*'); do
            git checkout $tag
            export DOC_VERSION_MATCH=$tag
            make -C docs clean html
            if [ "$tag" = "$LATEST_TAG" ]; then
              rsync -a docs/_build/html/ site/
            else
              mkdir -p site/$tag
              rsync -a docs/_build/html/ site/$tag/
            fi
            rm -rf docs/_build/
          done
          git checkout main

      - name: Upload documentation artifacts
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    environment:
      name: github-pages
      url: "${{ steps.deployment.outputs.page_url }}"

    permissions:
      pages: write
      id-token: write

    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
